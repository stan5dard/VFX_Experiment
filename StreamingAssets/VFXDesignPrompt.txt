(Task) 너는 이제 3D 게임을 위한 VFX를 디자인해야 돼. 다음의 규칙을 따라 VFX를 제작하도록 해. 
제공된 이미지는 '{ORIGINAL_USER_PROMPT}' effect을 그린 것이며, 제공된 JSON은 다음과 같습니다:
```json
{FIRST_ANALYSIS_JSON}
```
이 JSON은 VFX내의 VFX component들과 각각의 component의 생김새 및 역할을 설명한 거야.

다음은 참고해야 할 Mesh 데이터베이스 (mesh.csv) 내용이야:
```csv
{MESH_CSV_DATA}
```

다음은 참고해야 할 Texture 데이터베이스 (texture.csv) 내용이야:
```csv
{TEXTURE_CSV_DATA}
```


(Topology Analysis) 각 component의 설명을 읽고 component에 가장 잘 부합하는 topolog를 찾도록 해. Mesh는 부피감이 있거나 특정 형태의 VFX를 제작하는 데 좋아. 이펙트에서 가장 메인이 되는 component는 maincomponent라고 부를거야. maincomponent는 VFX내에 한개만 존재해.

(Mesh and Texture Selection) 각 component에 대해 가장 해당 component를 표현하기 적합한 mesh와 texture를 찾을 거야. 위에서 제공된 mesh csv 파일 내용과 texture csv 파일 내용을 참고해야 해. Mesh 선택: 해당 component가 어떻게 생겼는지를 생각하고, 그것과 가장 일치하는 description을 mesh csv에서 찾아서 해당 mesh의 object_name을 반환하는 거야. Mesh의 object_name은 반드시 mesh csv의 object_name 열에 존재해야 해.

(Texture) 모든 component에 대해, 해당 component의 표면이 어떻게 보일지 (예: 날카로운 베기 자국, 에너지의 흐름, 스파크 입자 등)를 고려하여 가장 적합한 description을 texture csv에서 찾아 해당 texture의 이름 (예: texture_name)을 반환하는 거야. Texture의 이름은 반드시 texture csv의 texture_name 열에 존재해야 해.

(Spatial Layout) 각 Component에 대해 spatial한 layout을 결정할거야. 각 component의 3d 상에서의 bounding box를생각해. Bounding box는 두 개의 벡터로 결정되는데 minimum(Vector3)과 maximum(Vector3)으로 결정하도록 해.

(Temporal Layout) Target VFX의 전체 duration (VFXDuration, float)을 결정해. 최대 5초로 결정할 수 있어. Target VFX의 전체 duration이 결정되었다면, Target VFX를 구성하는 각 component들의 delay (ComponentDelay, float)와 duration (ComponentDuration, float)를 결정해. 예를 들어, 한 component가 ComponentDelay 1.1초, ComponentDuration 3.2초를 가졌다면, 그 component는 전체 VFX가 시작되고 1.1초 뒤에 나타나서 4.3초에 사라지는거야.

(Animation) 각 component의 텍스처가 시간에 따라 어떻게 움직일지를 결정할 수 있어. Texture Scroll은 텍스처의 UV 좌표를 시간에 따라 이동시켜 애니메이션 효과를 주는 기능이야. ComponentTextureScroll은 2차원 벡터 (Vector2)로 표현되며, 각 축의 값은 -1.0에서 1.0 사이의 값을 가져. 예를 들어, (0.5, 0.0)은 텍스처가 U(가로) 방향으로 스크롤되는 것을 의미해. 값이 없거나 애니메이션이 필요 없으면 (0.0, 0.0)으로 설정해.

(Format) 각 component에 대해 답변은 아래 json 포맷으로 하는거야.

{
  "ComponentName": "healing_ring",                  // string: 컴포넌트의 이름. 의미 있는 명칭 사용.
  "IsMain": true,                                   // boolean: VFX의 주 컴포넌트인지 여부. 하나만 true 가능.
  "ComponentType": "Mesh",                          // string: Mesh
  "ComponentMeshName": "plane",                     // string: mesh.csv에서 가져온 mesh 이름.
  "ComponentTextureName": "AuraRingGlow01",         // string: texture.csv에서 가져온 텍스처 이름.
  "ComponentBoundingBox": [                         // Vector3[2]: 컴포넌트의 공간 범위. [min Vector3, max Vector3]
    [0.0, 0.0, 0.0],                                // Vector3: Bounding box의 최소 좌표 (x, y, z)
    [2.0, 0.1, 2.0]                                 // Vector3: Bounding box의 최대 좌표 (x, y, z)
  ],
  "ComponentDuration": 2.8,                         // float: 해당 컴포넌트의 지속 시간 (초). 전체 VFXDuration보다 짧아야 함.
  "ComponentDelay": 0.2,                            // float: 전체 VFX 시작 기준, 이 컴포넌트가 시작될 때까지의 지연 시간 (초)
  "ComponentTextureScroll": [0.1, 0.0]              // Vector2: 텍스처 UV 애니메이션 속도. [u 방향 속도, v 방향 속도], 범위는 -1.0 ~ 1.0
}

예를 들어, com이제 각각의 component에 대해 component의 topology, texture, animation, layout을 정해야 돼. 위에서 제공된 Mesh 및 Texture 데이터베이스를 반드시 참고해야 해. 아래의 instruction을 따라가도록 해.
ponent들이 모인 전체 VFX에 대한 답변은 이렇게 되는거야.

{
  "VFXName": "red explosion",
  "VFXDuration": 2.0,
  "components": [
    {
      "ComponentName": "explosion_core",
      "IsMain": true,
      "ComponentType": "Mesh",
      "ComponentMeshName": "Tornado1",
      "ComponentTextureName": "Impact25",
      "ComponentBoundingBox": [[0.0, 0.0, 0.0], [1.0, 1.2, 0.9]],
      "ComponentDuration": 1.1,
      "ComponentDelay": 0.9,
      "ComponentTextureScroll": [0.2, 0.0]
    },
    {
      "ComponentName": "explosion_smokes",
      "IsMain": false,
      "ComponentType": "Mesh",
      "ComponentMeshName": "plane",
      "ComponentTextureName": "Flare30",
      "ComponentBoundingBox": [[0.0, 0.0, 0.0], [1.0, 1.0, 0.9]],
      "ComponentDuration": 0.8,
      "ComponentDelay": 0.1,
      "ComponentTextureScroll": [0.0, 0.1]
    },
    {
      "ComponentName": "explosion_particles",
      "IsMain": false,
      "ComponentType": "Mesh",
      "ComponentMeshName": "plane",
      "ComponentTextureName": "FireEmbers",
      "ComponentBoundingBox": [[0.0, 0.0, 0.0], [1.0, 1.0, 0.9]],
      "ComponentDuration": 0.8,
      "ComponentDelay": 0.1,
      "ComponentTextureScroll": [0.0, 0.0]
    }
  ]
}

위 json 포맷 이외의 다른 말은 일절 하면 안돼. 너의 답변을 파싱해서 다른 작업을 수행해야 하기 때문에 다른 말을 하게 되면 파싱을 할 수 없어져. 무조건 이 포맷을 지키고 다른 말은 일절 하지 마. 